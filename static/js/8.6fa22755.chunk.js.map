{"version":3,"sources":["views/issues.js"],"names":["getBadge","statusof","getAction","actions","fields","Issues","setAuth","useState","allIssues","setAllIssues","issues","setIssues","getProfile","a","fetch","method","headers","jwt_token","localStorage","token","res","json","parseData","console","error","message","useEffect","logout","e","preventDefault","removeItem","err","modal","setModal","toggle","services","assign_to","title","urgency","summary","inputs","setInputs","useForm","register","handleSubmit","errors","onSubmit","data","log","target","className","myHeaders","Headers","append","body","JSON","stringify","response","parseRes","changeHandler","name","value","onClick","centered","show","onClose","closeButton","noValidate","type","onChange","placeholder","required","minLength","maxLength","ref","fluid","sm","window","location","reload","items","hover","tableFilter","columnFilterSlot","clickableRows","itemsPerPageSelect","sorter","bordered","size","itemsPerPage","pagination","scopedSlots","item","issue_id","color","priorities","created_at","breach"],"mappings":"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","file":"static/js/8.6fa22755.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { AiOutlineReload } from \"react-icons/ai\";\n\n\n\nimport {\n  CBadge,\n  CButton,\n  CButtonToolbar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CDataTable,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CRow\n} from '@coreui/react'\nimport { useForm } from 'react-hook-form';\n\n\n\n\n\n// const usersData = [\n//   { number: 1, title: 'website not working', service: 'Icinga2Integration', created: '2018/01/01', 'assigned_to': 'Johny Bravo', priority: '', status: 'Active', breach: '', actions: '' },\n//   { number: 2, title: 'website not working', service: 'Icinga2Integration', created: '2018/02/01', 'assigned_to': 'Johny Bravo', priority: '', status: 'Banned', breach: '', actions: '' },\n//   { number: 3, title: 'website not working', service: 'Icinga2Integration', created: '2018/02/01', 'assigned_to': 'Johny Bravo', priority: '', status: 'Inactive', breach: '', actions: '' },\n//   { number: 4, title: 'server down', service: 'Icinga2Integration', created: '2018/03/01', 'assigned_to': 'Johny Bravo', priority: '', status: 'Pending', breach: '', actions: '' },\n//   { number: 5, title: 'website not working', service: 'Icinga2Integration', created: '2018/01/21', 'assigned_to': 'Johny Bravo', priority: '', status: 'Active', breach: '', actions: '' },\n//   { number: 6, title: 'website not working', service: 'Icinga2Integration', created: '2018/01/01', 'assigned_to': 'Johny Bravo', priority: '', status: 'Active', breach: '', actions: '' },\n//   { number: 7, title: 'server down', service: 'Icinga2Integration', created: '2018/02/01', 'assigned_to': 'Johny Bravo', priority: '', status: 'Banned', breach: '', actions: '' },\n//   { number: 8, title: 'website not working', service: 'Icinga2Integration', created: '2018/02/01', 'assigned_to': 'Johny Bravo', priority: '', status: 'Inactive', breach: '', actions: '' },\n//   { number: 9, title: 'website not working', service: 'Icinga2Integration', created: '2018/03/01', 'assigned_to': 'Johny Bravo', priority: '', status: 'Pending', breach: '', actions: '' },\n//   { number: 10, title: 'server down', service: 'Icinga2Integration', created: '2018/01/21', 'assigned_to': 'Johny Bravo', priority: '', status: 'Active', breach: '', actions: '' },\n// ]\n\n\nconst getBadge = statusof => {\n  switch (statusof) {\n    case 'Active': return 'success'\n    case 'pending': return 'dark'\n    case 'Pending': return 'warning'\n    case 'cross': return 'danger'\n    case 'low': return 'danger'\n    default: return 'primary'\n  }\n}\n\nconst getAction = actions => {\n  switch (actions) {\n    // case 'Ack': return 'success'\n    // case '': return 'dark'\n    // case 'Pending': return 'warning'\n    // case 'Banned': return 'danger'\n    // default: return 'primary'\n  }\n}\n\n\n\nconst fields = ['number', 'title', 'service', 'assign_to', 'statusof', 'priority', 'created', 'breach', 'actions']\n\nconst Issues = ({ setAuth }) => {\n\n\n\n  const [allIssues, setAllIssues] = useState([]);\n  const [issues, setIssues] = useState([]);\n  // ------------------------------------\n  const getProfile = async () => {\n    try {\n      const res = await fetch(\"http://localhost:3000/issues/\", {\n        method: \"GET\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      const parseData = await res.json();\n\n      setAllIssues(parseData);\n\n      // setName(parseData[0].user_firstname);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  useEffect(() => {\n    setIssues(allIssues);\n  }, [allIssues]);\n\n  const logout = async e => {\n    e.preventDefault();\n    try {\n      localStorage.removeItem(\"token\");\n      setAuth(false);\n      // toast.success(\"Logout successfully\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  // ---------------------- Modal -------------------------\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    setModal(!modal);\n  }\n\n  const [inputs, setInputs] = useState({\n    services: \"\",\n    assign_to: \"\",\n    title: \"\",\n    urgency: \"\",\n    summary: \"\",\n    statusof: \"\",\n  });\n\n  const { services, assign_to, title, urgency, summary, statusof } = inputs;\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = async (data, e) => {\n    e.preventDefault();\n    console.log(data)\n    e.target.className += \" was-validated\";\n    try {\n      const myHeaders = new Headers();\n\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n\n      const body = { services, assign_to, title, urgency, statusof };\n\n      const response = await fetch(\n        \"http://localhost:3000/issues\",\n        {\n          method: \"POST\",\n          headers: myHeaders,\n          \n          body: JSON.stringify(body)\n        }\n      );\n\n      const parseRes = await response.json();\n      console.log(parseRes);\n      // if (parseRes.jwtToken) {\n      //   localStorage.setItem(\"token\", parseRes.jwtToken);\n        // toast.success(\"Register Successfully\");\n        // setAuth(true);\n        // toast.success(\"Register Successfully\");\n      // } else {\n        // toast.error(parseRes);\n        // setAuth(false);\n        // toast.error(parseRes);\n      // }\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n\n  const changeHandler = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  // ---------------------------------------\n  // -----------------------------\n  return (\n    <div>\n    <button onClick={e => logout(e)} className=\"btn btn-primary\"></button>\n      {/* ------------------------------ Modal ---------------------- */}\n      <CModal\n        centered\n        show={modal}\n        onClose={toggle}\n      >\n        <CModalHeader closeButton>Create A New Issue</CModalHeader>\n        <CModalBody>\n          {/* <CRow className=\"justify-content-center p-4\"> */}\n          {/* <CCol md=\"12\" > */}\n          {/* <CCard className=\"mx-4\">\n      <CCardBody className=\"p-4\"> */}\n          <form\n            className='needs-validation'\n            onSubmit={handleSubmit(onSubmit)}\n            noValidate\n          >\n\n\n\n\n            <div className=\"form-group \">\n              <label className=\"label-form\" >\n                Service:\n          <span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                onChange={changeHandler}\n                value={services}\n                className=\"form-control input  bg-transparent border-2 outline-none rounded-sm   \"\n                name=\"services\"\n                placeholder=\"Services\"\n                required\n                minLength=\"2\"\n                maxLength=\"30\"\n                ref={register({\n                  required: \"Please Provide Missing Field\",\n                })}\n              />\n              {errors.services && <p className=\"text-danger pt-1\">{errors.services.message}</p>}\n\n\n            </div>\n\n\n            <div className=\"form-group \">\n              <label className=\"label-form\" >\n                Assign To:\n          <span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                onChange={changeHandler}\n                value={assign_to}\n                className=\"form-control input  bg-transparent border-2 outline-none rounded-sm   \"\n                name=\"assign_to\"\n                placeholder=\"Assign to\"\n                required\n                minLength=\"2\"\n                maxLength=\"30\"\n                ref={register({\n                  required: \"Please Provide Missing Field\",\n                })}\n              />\n              {errors.assign_to && <p className=\"text-danger pt-1\">{errors.assign_to.message}</p>}\n            </div>\n\n            <div className=\"form-group \">\n              <label className=\"label-form\" >\n                Title:\n          <span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                onChange={changeHandler}\n                value={title}\n                className=\"form-control input  bg-transparent border-2 outline-none rounded-sm   \"\n                name=\"title\"\n                placeholder=\"Title\"\n                required\n                minLength=\"2\"\n                maxLength=\"45\"\n                ref={register({\n                  required: \"Please Provide Missing Field\",\n                })}\n              />\n              {errors.title && <p className=\"text-danger pt-1\">{errors.title.message}</p>}\n\n\n            </div>\n\n\n            <div className=\"form-group \">\n              <label className=\"label-form\" >\n                Urgency:\n          <span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                onChange={changeHandler}\n                value={urgency}\n                className=\"form-control input  bg-transparent border-2 outline-none rounded-sm   \"\n                name=\"urgency\"\n                placeholder=\"Urgency\"\n                required\n                minLength=\"2\"\n                maxLength=\"30\"\n                ref={register({\n                  required: \"Please Provide Missing Field\",\n                })}\n              />\n              {errors.urgency && <p className=\"text-danger pt-1\">{errors.urgency.message}</p>}\n\n\n            </div>\n\n            <div className=\"form-group \">\n              <label className=\"label-form\" >\n                Summary:\n                            <span className=\"text-danger\">*</span>\n              </label>\n              <textarea\n                type=\"text\"\n                onChange={changeHandler}\n                value={summary}\n                className=\"form-control input  bg-transparent border-2 outline-none rounded-sm   \"\n                name=\"summary\"\n                placeholder=\"Summary\"\n                required\n                // minLength=\"5\"\n                maxLength=\"100\"\n                ref={register({\n                  required: \"Please Provide Missing Field\",\n                })}\n              />\n              {errors.summary && <p className=\"text-danger pt-1\">{errors.summary.message}</p>}\n            </div>\n\n\n\n            <div className=\"form-group \">\n              <label className=\"label-form\" >\n                Status:\n                            {/* <span className=\"text-danger\">*</span> */}\n              </label>\n              <input\n                type=\"text\"\n                onChange={changeHandler}\n                value={statusof}\n                className=\"form-control input  bg-transparent border-2 outline-none rounded-sm   \"\n                name=\"statusof\"\n                placeholder=\"Status of\"\n                required\n                // minLength=\"5\"\n                maxLength=\"50\"\n                // ref={register({\n                //   required: \"Please Provide Missing Field\",\n                // })}\n              />\n              {/* {errors.statusof && <p className=\"text-danger pt-1\">{errors.statusof.message}</p>} */}\n            </div>\n\n            <CButton type=\"submit\" className=\"btn btn-info\">Submit Incident</CButton>\n          </form>\n\n\n\n          {/* </CCol> */}\n          {/* </CRow> */}\n        </CModalBody>\n        <CModalFooter>\n          {/* <CButton color=\"primary\">Do Something</CButton>{' '} */}\n          {/* <CButton\n            color=\"secondary\"\n            onClick={toggle}\n          >Cancel</CButton> */}\n        </CModalFooter>\n      </CModal>\n\n      {/* -------------------------------------------------------- */}\n\n      <CContainer fluid>\n        <CRow>\n          <CCol sm=\"3\" className=\"text-center\">\n            Open Incidents\n          <h5 className=\"font-weight-bold\">2</h5>\n          </CCol>\n          <CCol sm=\"3\" className=\"text-center\">\n            Open-unacknowledged\n          <h5 className=\"font-weight-bold\">2</h5>\n          </CCol>\n          <CCol sm=\"3\" className=\"text-center\">\n            Assigned to you\n          <h5 className=\"font-weight-bold\">2</h5>\n          </CCol>\n          <CCol sm=\"3\" className=\"text-center\">\n            Unacknowledged by you\n          <h5 className=\"font-weight-bold\">2</h5>\n          </CCol>\n        </CRow>\n      </CContainer>\n\n\n      <CContainer fluid className=\"p-4\">\n        <CRow >\n          <button type=\"button\" className=\"btn btn-outline-dark px-4\" onClick={() => window.location.reload(false)}><AiOutlineReload /> Refresh</button>\n          <CButtonToolbar className=\"px-5\">\n            <CButton type=\"radio\" className=\"btn btn-outline-dark px-3\">Triggered</CButton>\n            <CButton type=\"radio\" className=\"btn btn-outline-dark px-4\">Open</CButton>\n            <CButton type=\"radio\" className=\"btn btn-outline-dark px-3\">Acknowledged</CButton>\n            <CButton type=\"radio\" className=\"btn btn-outline-dark px-3\">Resolved</CButton>\n            <CButton type=\"radio\" className=\"btn btn-outline-dark \">All</CButton>\n          </CButtonToolbar>\n          <button type=\"button\" className=\"btn btn-outline-dark\">Assigned to me</button>\n        </CRow>\n      </CContainer>\n\n\n      <CContainer fluid className=\"pr-4 pb-2 pl-0 d-flex justify-content-end \"> <div>\n\n        {/* <div class=\"btn-group btn-group-toggle px-3 \" data-toggle=\"CButtons btn-dark\">\n\n          <input className=\"form-control mr-sm\" type=\"search\" placeholder=\"Search Issues\" aria-label=\"Search\" />\n        </div> */}\n        <CButton type=\"button\" className=\"btn btn-info px-4\" onClick={toggle} >New Issue</CButton>\n\n      </div>\n      </CContainer>\n\n{/* ------------------------------- Table For all Issues ------------------- */}\n\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              Issues\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={issues}\n                fields={fields}\n                hover\n                // striped\n                tableFilter\n                columnFilterSlot\n                clickableRows\n                itemsPerPageSelect\n                // itemsPerPageSelect\n                sorter\n                bordered\n                size=\"lg\"\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  'number':\n                    (item) => (\n                      <td>\n                        <p >\n                          {item.issue_id}\n                        </ p>\n                      </td>\n                    ),\n                  'title':\n                    (item) => (\n                      <td>\n                        <p >\n                          {item.title}\n                        </ p>\n                      </td>\n                    ),\n                  'service':\n                    (item) => (\n                      <td>\n                        <p >\n                          {item.services}\n                        </ p>\n                      </td>\n                    ),\n                  'Assign to':\n                    (item) => (\n                      <td>\n                        <p >\n                          {item.assign_to}\n                        </ p>\n                      </td>\n                    ),\n                  'status':\n                    (item) => (\n                      <td>\n                        <CBadge color={getBadge(item.statusof)}>\n                          {item.statusof}\n                        </ CBadge>\n                      </td>\n                    ),\n                  'priority':\n                    (item) => (\n                      <td>\n                        <p >\n                          {item.priorities}\n                        </ p>\n                      </td>\n                    ),\n                  'created':\n                    (item) => (\n                      <td>\n                        <p >\n                          {item.created_at}\n                        </ p>\n                      </td>\n                    ),\n                  'breach':\n                    (item) => (\n                      <td>\n                        <p >\n                          {item.breach}\n                        </ p>\n                      </td>\n                    ),\n                  'actions':\n                    (item) => (\n                      <td className=\"px-1\">\n                        <CButton className=\"btn-outline-dark m-1\" size=\"sm\" color={getAction(item.actions)}>\n                        {item.actions}\n                        </CButton >\n                        <CButton className=\"btn-outline-dark m-1\" size=\"sm\" color={getAction(item.actions)}> \n                        {item.actions}\n\n                        </CButton >\n                      </td>\n                    ),\n\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n\n    </div>\n\n\n  )\n}\n\nexport default Issues\n"],"sourceRoot":""}